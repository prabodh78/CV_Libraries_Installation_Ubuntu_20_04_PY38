

# CUDA directory contains bin/ and lib/ directories that we need.
CUDA_DIR := /usr/local/cuda-11
CUDA_ARCH := -gencode arch=compute_80,code=sm_80

# open for OpenBlas
BLAS := open

# NOTE: this is required only if you will compile the python interface.
# We need to be able to find Python.h and numpy/arrayobject.h.
# PYTHON_LIBRARIES := boost_python3 python3.8m
# PYTHON_LIBRARIES := boost_python3 python3.6m
PYTHON_LIBRARIES := boost_python-py38 python3.8m

#PYTHON_INCLUDE := /usr/include/python3.8m \
#                 /usr/lib/python3/dist-packages/numpy/core/include

PYTHON_INCLUDE := /usr/include/python3.8 \
                 /usr/lib/python3/dist-packages/numpy/core/include


# We need to be able to find libpythonX.X.so or .dylib.
PYTHON_LIB := /usr/lib

OPENCV_VERSION := 4

# Whatever else you find you need goes here.
INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial /usr/include/opencv4
# INCLUDEPATH += /usr/local/include/opencv4

LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu/hdf5/serial

# LIBRARIES += glog gflags protobuf boost_system boost_filesystem hdf5_hl hdf5 opencv_core opencv_highgui opencv_imgproc opencv_imgcodecs

LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_serial_hl hdf5_serial

# Uncomment to use `pkg-config` to specify OpenCV library paths.
# (Usually not necessary -- OpenCV libraries are normally installed in one of the above $LIBRARY_DIRS.)
# USE_PKG_CONFIG := 1

BUILD_DIR := build
DISTRIBUTE_DIR := distribute

# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171
# DEBUG := 1

# The ID of the GPU that 'make runtest' will use to run unit tests.
TEST_GPUID := 0
